apply plugin: 'com.android.library'
apply plugin: 'com.android.library'
def global = parent.ext.global
def isKnowModule = global.isKnowModule.toBoolean()
if (isKnowModule) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
def config = parent.ext.android

android {
    compileSdkVersion config.compileSDKVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        if (isKnowModule) {
            applicationId "com.felix.know"
        }
        minSdkVersion config.minSDKVersion
        targetSdkVersion config.targetSDKVersion
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    dataBinding {
        enabled true
    }
    sourceSets {
        main {
            if (isKnowModule) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':base')

    // 自动生成网络请求代码
    annotationProcessor project(':apt')
}